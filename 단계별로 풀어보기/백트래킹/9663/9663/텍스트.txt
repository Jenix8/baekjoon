#include <iostream>
#include <vector>
using namespace std;

bool permutation(vector<int>& v) {
	int m = v.size();
	int i = m - 1;

	while (i > 0 && v[i - 1] >= v[i]) i -= 1;
	if (i <= 0) return false;
	int j = m - 1;

	while (v[j] <= v[i - 1]) j -= 1;
	int temp = v[i - 1];
	v[i - 1] = v[j];
	v[j] = temp;

	j = m - 1;
	while (i < j) {
		temp = v[i];
		v[i] = v[j];
		v[j] = temp;
		i++;
		j--;
	}
	return true;
}

int main() {
	int N;
	cin >> N;
	int count = 0;
	bool possible = false;

	vector<int> v;

	int facto = 1;
	for (int i = 0; i < N; i++) {
		v.push_back(i);
		facto *= (i + 1);
	}

	do {
		possible = true;

		for (int i = 0; i < N - 1; i++) {
			for (int j = i + 1; j < N; j++) {
				if (abs(v.at(j) - v.at(i)) == j - i) {
					possible = false;
					break;
				}
			}
		}

		if (possible)
			count++;
	} while (permutation(v));

	cout << count << endl;
	return 0;
}